name: build golang
on: [push]
jobs:
  tests:
    name: Automated tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
        go-version: '1.20'
    - name: Run tests
      run: go test ./...
  ci:
    name: Compile binary
    runs-on: ubuntu-latest
    needs: tests
    env:
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      PLATFORMS: "linux/amd64,linux/arm64"
    steps:
    - uses: actions/checkout@v3
    - name: Docker login into ECR
      env:
        AWS_EC2_METADATA_DISABLED: true
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: "eu-west-1"
      run: |
        set -eu -o pipefail
        aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin $(echo $ECR_REPOSITORY | cut -f 1 -d:)
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
        platforms: ${{ env.PLATFORMS }}
    - name: Set version number
      run: |
        BRANCH="${GITHUB_REF_NAME//\//-}"
        VERSION=$([ "$GITHUB_REF_NAME" == "master" ] && echo "1.2.${GITHUB_RUN_NUMBER}" || echo "0.2.${GITHUB_RUN_NUMBER}-${GITHUB_REF_NAME//\//-}")
        echo "BRANCH=$BRANCH" | tee -a $GITHUB_ENV
        echo "VERSION=$VERSION" | tee -a $GITHUB_ENV
    - name: Build images
      run: |
        docker buildx build --platform "$PLATFORMS" -t "$ECR_REPOSITORY:$VERSION" --push .
    - name: docker logout
      run: docker logout
